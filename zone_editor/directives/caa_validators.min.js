define(["angular","cjt/util/locale","cjt/validator/validator-utils","cjt/validator/domain-validators","cjt/validator/email-validator","cjt/validator/validateDirectiveFactory"],function(angular,LOCALE,validationUtils,DOMAIN_VALIDATORS,EMAIL_VALIDATORS){var mailToRegex=/^mailto:/;var validate_iodef=function(val){var result=validationUtils.initializeValidationResult();var otherResult;result.isValid=false;if(mailToRegex.test(val)){val=val.replace(mailToRegex,"");otherResult=EMAIL_VALIDATORS.methods.email(val)}else{otherResult=DOMAIN_VALIDATORS.methods.url(val)}result.isValid=otherResult.isValid;if(!result.isValid){result.add("caaIodef",LOCALE.maketext("You must enter a valid [asis,mailto] or standard [asis,URL]."))}return result};var validate_issue=function(val){var result=validationUtils.initializeValidationResult();result.isValid=false;if(val===";"){result.isValid=true}else{var zoneNameResult=DOMAIN_VALIDATORS.methods.zoneFqdn(val);result.isValid=zoneNameResult.isValid}if(!result.isValid){result.add("caaIssue",LOCALE.maketext("You must enter a valid zone name or a single semicolon."))}return result};var validators={caaValue:function(val,type){if(type==="iodef"){return validate_iodef(val)}else{return validate_issue(val)}}};var validatorModule=angular.module("cjt2.validate");validatorModule.run(["validatorFactory",function(validatorFactory){validatorFactory.generate(validators)}]);return{methods:validators,name:"caaValidators",description:"Validation library for CAA records.",version:1}});