define(["angular","cjt/io/api","cjt/io/uapi-request","cjt/util/locale"],function(angular,API,APIREQUEST,LOCALE){var app;try{app=angular.module("cpanel.mail.Pops")}catch(e){app=angular.module("cpanel.mail.Pops",[])}app.factory("emailAccountsService",["$q","APIService",function($q,APIService){var EmailAccountsService=function(){};EmailAccountsService.prototype=new APIService;angular.extend(EmailAccountsService.prototype,{_dataWrapper:function(apiCall){return this.deferred(apiCall,{transformAPISuccess:function(response){return response.data}}).promise},addEmailAccount:function(emailAccount){var apiCall=new APIREQUEST.Class;apiCall.initialize("Email","add_pop",emailAccount);return this._dataWrapper(apiCall)},isSharedAddressBookEnabled:function(){var apiCall=new APIREQUEST.Class;apiCall.initialize("DAV","has_shared_global_addressbook");return this._dataWrapper(apiCall)},enableSharedAddressBook:function(){var apiCall=new APIREQUEST.Class;apiCall.initialize("DAV","enable_shared_global_addressbook");return this._dataWrapper(apiCall)},disableSharedAddressBook:function(){var apiCall=new APIREQUEST.Class;apiCall.initialize("DAV","disable_shared_global_addressbook");return this._dataWrapper(apiCall)},changePassword:function(email,domain,password){var apiCall=new APIREQUEST.Class;apiCall.initialize("Email","passwd_pop",{email:email,domain:domain,password:password});return this._dataWrapper(apiCall)},changeQuota:function(email,domain,quota){var apiCall=new APIREQUEST.Class;apiCall.initialize("Email","edit_pop_quota",{email:email,domain:domain,quota:quota});return this._dataWrapper(apiCall)},deleteEmailAccount:function(email,domain){var apiCall=new APIREQUEST.Class;apiCall.initialize("Email","delete_pop",{email:email,domain:domain});return this._dataWrapper(apiCall)},getEmailAccounts:function(apiParams){if(this.currentGetRequest&&this.currentGetRequest.jqXHR){this.currentGetRequest.jqXHR.abort()}var apiCall=new APIREQUEST.Class;if(!apiParams){apiParams={}}apiParams["no_human_readable_keys"]=1;apiCall.initialize("Email","list_pops_with_disk",apiParams);var deferred=$q.defer();var service=this;this.currentGetRequest=new APIService.AngularAPICall(apiCall,{done:function(response){service.currentGetRequest=undefined;if(response.parsedResponse.error){deferred.reject(response.parsedResponse.error)}else{var result=response.parsedResponse;result.data.forEach(function(emailAccount){emailAccount.diskused=parseInt(emailAccount.diskused,10);if(emailAccount._diskquota===0||emailAccount.diskquota===0||emailAccount.diskquota==="unlimited"){emailAccount.diskquota=0;emailAccount.humandiskquota="&infin;";emailAccount.diskusedpercent=0}else{emailAccount.diskquota=parseInt(emailAccount.diskquota,10);emailAccount.humandiskquota=emailAccount.diskquota;emailAccount.diskusedpercent=(emailAccount.diskused/emailAccount.diskquota*100).toFixed(2)}emailAccount.humandiskusedpercent=LOCALE.maketext("[_1]%",emailAccount.diskusedpercent);emailAccount.suspended_login=""+emailAccount.suspended_login==="1";emailAccount.suspended_incoming=""+emailAccount.suspended_incoming==="1"});deferred.resolve(result)}},fail:function(){service.currentGetRequest=undefined}});return deferred.promise},getDefaultAccountUsage:function(){var apiCall=new APIREQUEST.Class;apiCall.initialize("Email","get_main_account_disk_usage");return this._dataWrapper(apiCall)}});return new EmailAccountsService}])});