define(["angular","lodash","cjt/util/parse"],function(angular,_,PARSER){var app=angular.module("App");app.factory("serverInfoService",[function(){var self={prepareSslInfo:function(sslInfo){sslInfo.cert_valid_not_after=new Date(sslInfo.cert_valid_not_after*1e3);sslInfo.cert_valid=new Date<sslInfo.cert_valid_not_after;sslInfo.is_self_signed=PARSER.parsePerlBoolean(sslInfo.is_self_signed);sslInfo.is_wild_card=PARSER.parsePerlBoolean(sslInfo.is_wild_card);sslInfo.ssldomain_matches_cert=PARSER.parsePerlBoolean(sslInfo.ssldomain_matches_cert);return sslInfo},prepareFtpDaemonInfo:function(daemon){daemon.enabled=PARSER.parsePerlBoolean(daemon.enabled);daemon.supports.quota=PARSER.parsePerlBoolean(daemon.supports.quota);daemon.supports.login_without_domain=PARSER.parsePerlBoolean(daemon.supports.login_without_domain);return daemon},prepareDefaultInfo:function(defaults){_.each(["email","ftp","webdisk"],function(serviceName){var service=defaults[serviceName];_.each(["default_quota","default_value","max_quota"],function(fieldName){service[fieldName]=parseInt(service[fieldName],10);if(isNaN(service[fieldName])){service[fieldName]=0}});service.select_unlimited=PARSER.parsePerlBoolean(service.select_unlimited)});return defaults},prepareQuotaInfo:function(quotaInfo){return self.parseObj(quotaInfo,{under_megabyte_limit:PARSER.parsePerlBoolean,under_inode_limit:PARSER.parsePerlBoolean,under_quota_overall:PARSER.parsePerlBoolean,inodes_used:PARSER.parseInteger,inode_limit:PARSER.parseInteger,inodes_remain:PARSER.parseInteger,megabytes_used:PARSER.parseNumber,megabyte_limit:PARSER.parseNumber,megabytes_remain:PARSER.parseNumber})},parseObj:function(obj,parseMap){angular.forEach(parseMap,function(parseFn,key){obj[key]=parseFn(obj[key])});return obj}};return self}])});