define(["angular","cjt/util/locale","cjt/validator/validator-utils","cjt/validator/validateDirectiveFactory","app/services/userService"],function(angular,LOCALE,validatorUtils,validatorFactory,userService){var module=angular.module("App");module.directive("usernameWithDomainWrapper",[function(){var ParentController=function($attrs){this.username=this.domain="";this.$attrs=$attrs};angular.extend(ParentController.prototype,{setDomain:function(domain){if(typeof domain!=="undefined"){this.domain=domain}return this.getTotalLength()},setUsername:function(username){if(typeof username!=="undefined"){this.username=username}return this.getTotalLength()},getUsernameAndDomain:function(){return this.username+"@"+this.domain},getTotalLength:function(){return this.getUsernameAndDomain().length}});return{restrict:"A",scope:false,controller:["$attrs",ParentController]}}]);module.directive("usernameWithDomain",["userService","$q",function(userService,$q){return{restrict:"A",scope:false,require:["^^usernameWithDomainWrapper","ngModel"],link:function(scope,elem,attrs,ctrls){var parentCtrl=ctrls[0];var ngModel=ctrls[1];var type=attrs.usernameWithDomain;if(type==="username"){parentCtrl.validateUsername=ngModel.$validate;var formCtrl=elem.controller("form");validatorUtils.initializeExtendedReporting(ngModel,formCtrl);var validateUsernameWithDoamin=function(totalLength){var TOTAL_MAX_LENGTH=254;var result=validatorUtils.initializeValidationResult();if(totalLength>TOTAL_MAX_LENGTH){result.addError("maxLength",LOCALE.maketext("The combined length of the username, [asis,@] character, and domain cannot exceed [numf,_1] characters.",TOTAL_MAX_LENGTH))}return result};ngModel.$validators.usernameWithDomain=function(newUsername){var totalLength=parentCtrl.setUsername(newUsername);return validatorFactory.run("usernameWithDomain",ngModel,formCtrl,validateUsernameWithDoamin,totalLength)};var validateUsernameIsAvailableAsync=function(value){return userService.checkAccountConflicts(value).then(function(responseData){scope.$eval(parentCtrl.$attrs.lookupCallback,{responseData:responseData});return responseData}).then(function(){return validatorUtils.initializeValidationResult()},function(error){var result=validatorUtils.initializeValidationResult(true);result.addError("usernameIsAvailable",error);return result})};ngModel.$asyncValidators.usernameIsAvailable=function(modelValue,viewValue){var value=parentCtrl.getUsernameAndDomain();return validatorFactory.runAsync($q,"usernameIsAvailable",ngModel,formCtrl,validateUsernameIsAvailableAsync,value)}}else if(type==="domain"){ngModel.$formatters.push(function(val){parentCtrl.setDomain(ngModel.$modelValue);return val});ngModel.$viewChangeListeners.push(function(){parentCtrl.setDomain(ngModel.$modelValue);parentCtrl.validateUsername()})}else{throw new Error("The value for the username-with-domain directive needs to be set to 'username' or 'domain'.")}}}}])});