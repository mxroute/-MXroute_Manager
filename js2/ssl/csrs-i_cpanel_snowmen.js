//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/base/frontend/manager/js2/ssl/csrs.js
// Generated: /usr/local/cpanel/base/frontend/manager/js2/ssl/csrs-i_cpanel_snowmen.js
// Module:    /manager/js2/ssl/csrs-i_cpanel_snowmen
// Locale:    i_cpanel_snowmen
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Choose a country.":"☃☃☃☃☃☃ ☃ ☃☃☃☃☃☃☃☃","City":"☃☃☃☃","Company":"☃☃☃☃☃☃☃","Company Division":"☃☃☃☃☃☃☃ ☃☃☃☃☃☃☃☃","Country":"☃☃☃☃☃☃☃","Domains":"☃☃☃☃☃☃☃","Email":"☃☃☃☃☃","Make sure to use a valid email format. For example, [asis,user@domain.com].":"☃☃☃☃ ☃☃☃☃ ☃☃ ☃☃☃ ☃ ☃☃☃☃☃ ☃☃☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃ ☃☃☃☃☃☃☃☃ [asis,☃☃☃☃☃☃☃☃☃☃☃☃☃☃☃]☃","Passphrase":"☃☃☃☃☃☃☃☃☃☃","State":"☃☃☃☃☃","The certificate signing request passphrase can contain only alphanumeric characters.":"☃☃☃ ☃☃☃☃☃☃☃☃☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃☃☃☃☃☃☃ ☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃ ☃☃☃☃☃☃☃☃☃☃☃☃ ☃☃☃☃☃☃☃☃☃☃☃","The certificate signing request passphrase must be at least [quant,_1,character,characters] long.":"☃☃☃ ☃☃☃☃☃☃☃☃☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃☃☃☃☃☃☃ ☃☃☃☃ ☃☃ ☃☃ ☃☃☃☃☃ [quant,_1,☃☃☃☃☃☃☃☃☃,☃☃☃☃☃☃☃☃☃☃] ☃☃☃☃☃","The company division must be no longer than [quant,_1,character,characters].":"☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃☃☃☃☃ ☃☃☃☃ ☃☃ ☃☃ ☃☃☃☃☃☃ ☃☃☃☃ [quant,_1,☃☃☃☃☃☃☃☃☃,☃☃☃☃☃☃☃☃☃☃]☃","The company name must be no longer than [quant,_1,character,characters].":"☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃ ☃☃☃☃ ☃☃ ☃☃ ☃☃☃☃☃☃ ☃☃☃☃ [quant,_1,☃☃☃☃☃☃☃☃☃,☃☃☃☃☃☃☃☃☃☃]☃","The passphrase must be no longer than [quant,_1,character,characters].":"☃☃☃ ☃☃☃☃☃☃☃☃☃☃ ☃☃☃☃ ☃☃ ☃☃ ☃☃☃☃☃☃ ☃☃☃☃ [quant,_1,☃☃☃☃☃☃☃☃☃,☃☃☃☃☃☃☃☃☃☃]☃","The “[_1]” field cannot be left blank.":"The “[_1]” field cannot be left blank.","This field contains characters that some certificate authorities may not accept. Contact your certificate authority to confirm that they accept these characters.":"☃☃☃☃ ☃☃☃☃☃ ☃☃☃☃☃☃☃☃ ☃☃☃☃☃☃☃☃☃☃ ☃☃☃☃ ☃☃☃☃ ☃☃☃☃☃☃☃☃☃☃☃ ☃☃☃☃☃☃☃☃☃☃☃ ☃☃☃ ☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃ ☃☃☃☃☃☃☃☃☃☃☃ ☃☃☃☃☃☃☃☃☃ ☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃ ☃☃☃☃ ☃☃☃☃☃☃ ☃☃☃☃☃ ☃☃☃☃☃☃☃☃☃☃☃","You can only enter valid domains.":"☃☃☃ ☃☃☃ ☃☃☃☃ ☃☃☃☃☃ ☃☃☃☃☃ ☃☃☃☃☃☃☃☃","You do not control this domain.":"☃☃☃ ☃☃ ☃☃☃ ☃☃☃☃☃☃☃ ☃☃☃☃ ☃☃☃☃☃☃☃","[numf,_1] of the [numerate,_2,domain,domains] that you have entered [numerate,_1,is a domain,are domains] that you do not control.":"[numf,_1] ☃☃ ☃☃☃ [numerate,_2,☃☃☃☃☃☃,☃☃☃☃☃☃☃] ☃☃☃☃ ☃☃☃ ☃☃☃☃ ☃☃☃☃☃☃☃ [numerate,_1,☃☃ ☃ ☃☃☃☃☃☃,☃☃☃ ☃☃☃☃☃☃☃] ☃☃☃☃ ☃☃☃ ☃☃ ☃☃☃ ☃☃☃☃☃☃☃☃"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
