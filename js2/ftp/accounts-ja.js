//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/base/frontend/manager/js2/ftp/accounts.js
// Generated: /usr/local/cpanel/base/frontend/manager/js2/ftp/accounts-ja.js
// Module:    /manager/js2/ftp/accounts-ja
// Locale:    ja
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"AJAX Error":"AJAX エラー","Actions":"アクション","Error":"エラー","JSON parse failed.":"JSON 解析が失敗しました。","Loading …":"読み込んでいます…","Log In":"ログイン","Path":"パス","Please refresh the page and try again.":"もう一度ページを読み込んでからやり直してください。","Quota":"クォータ","The [output,acronym,FTP,File Transfer Protocol] username cannot exceed [numf,_1] characters.":"[output,acronym,FTP,ファイル転送プロトコル] ユーザー名は、[numf,_1] 文字を超えてはいけません。","The [output,acronym,FTP,File Transfer Protocol] username cannot start with a period, end with a period, or include two consecutive periods.":"[output,acronym,FTP,ファイル転送プロトコル] のユーザー名は、ピリオドで始めたり、ピリオドで終えたり、あるいは 2 つの連続したピリオドを含めることができません。","The full [output,acronym,FTP,File Transfer Protocol] username with its associated domain cannot exceed [numf,_1] characters.":"ドメインが関連付けられた [output,acronym,FTP,ファイル転送プロトコル]ユーザー名は [numf,_1] 文字を超えることができません。","Type":"種類","Unknown Error":"不明なエラー","Usage":"使用量","You can only enter letters [asis,(a-z)], numbers [asis,(0-9)], periods, hyphens [asis,(-)], and underscores [asis,(_)].":"文字 [asis,(a-z)]、数字 [asis,(0-9)]、ピリオド、ハイフン [asis,(-)]、およびアンダースコア [asis,(_)] のみを入力できます。","You must enter an [output,acronym,FTP,File Transfer Protocol] username.":"[output,acronym,FTP,ファイル転送プロトコル] ユーザー名を入力する必要があります。"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
