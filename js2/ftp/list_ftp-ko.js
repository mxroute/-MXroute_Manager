//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/base/frontend/manager/js2/ftp/list_ftp.js
// Generated: /usr/local/cpanel/base/frontend/manager/js2/ftp/list_ftp-ko.js
// Module:    /manager/js2/ftp/list_ftp-ko
// Locale:    ko
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"AJAX Error":"AJAX 오류","Actions":"작업","Error":"오류","JSON parse failed.":"JSON 구문 분석에 실패했습니다.","Loading …":"로드하는 중 …","Log In":"로그인","Path":"경로","Please refresh the page and try again.":"페이지를 다시 고치고 다시 시도하십시오.","Quota":"할당량","The [output,acronym,FTP,File Transfer Protocol] username cannot exceed [numf,_1] characters.":"The [output,acronym,FTP,File Transfer Protocol] username cannot exceed [numf,_1] characters.","The [output,acronym,FTP,File Transfer Protocol] username cannot start with a period, end with a period, or include two consecutive periods.":"The [output,acronym,FTP,File Transfer Protocol] username cannot start with a period, end with a period, or include two consecutive periods.","The full [output,acronym,FTP,File Transfer Protocol] username with its associated domain cannot exceed [numf,_1] characters.":"The full [output,acronym,FTP,File Transfer Protocol] username with its associated domain cannot exceed [numf,_1] characters.","Type":"형식","Unknown Error":"알 수 없는 오류","Usage":"사용량","You can only enter letters [asis,(a-z)], numbers [asis,(0-9)], periods, hyphens [asis,(-)], and underscores [asis,(_)].":"You can only enter letters [asis,(a-z)], numbers [asis,(0-9)], periods, hyphens [asis,(-)], and underscores [asis,(_)].","You must enter an [output,acronym,FTP,File Transfer Protocol] username.":"You must enter an [output,acronym,FTP,File Transfer Protocol] username."};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
