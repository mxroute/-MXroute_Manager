define(["angular","lodash","cjt/util/locale","app/services/backupAPI","uiBootstrap"],function(angular,_,LOCALE){var app=angular.module("App");app.controller("restoreModalController",["$scope","$uibModalInstance","fileExists",function($scope,$uibModalInstance,fileExists){$scope.fileExists=fileExists;$scope.closeModal=function(){$uibModalInstance.close()};$scope.runIt=function(){$uibModalInstance.close(true)}}]);var controller=app.controller("listController",["$scope","growl","backupAPIService","$uibModal",function($scope,growl,backupAPIService,$uibModal){$scope.buildBreadcrumb=function(){$scope.directoryBreadcrumb=[];if($scope.currentPath==="/"){$scope.directoryBreadcrumb=[{folder:$scope.currentPath,path:$scope.currentPath}]}else{var directories=$scope.currentPath.split("/");for(var i=0,length=directories.length;i<length;i++){$scope.directoryBreadcrumb.push({folder:directories[i],path:$scope.currentPath.split(directories[i])[0]+directories[i]})}}};$scope.changeDirectory=function(path){$scope.loadingData=true;$scope.fileBackupList=[];if(path===".."){path=$scope.directoryBreadcrumb[$scope.directoryBreadcrumb.length-3].path}if(path.charAt(path.length-1)!=="/"){path=path+"/"}backupAPIService.listDirectory(path).then(function(directoryPath){$scope.currentPath=path;$scope.buildBreadcrumb();$scope.addPaths(directoryPath);$scope.loadingData=false},function(error){growl.error(error);$scope.loadingData=false})};$scope.selectItem=function(item){if(item.type.indexOf("dir")!==-1){$scope.changeDirectory(item.fullPath)}else{$scope.selectedItemName=item.parsedName;$scope.selectedItemExists=item.exists;$scope.loadingData=true;backupAPIService.listFileBackups(item.fullPath).then(function(itemData){$scope.fileBackupList=itemData;$scope.loadingData=false},function(error){growl.error(error);$scope.loadingData=false})}};$scope.addPaths=function(directories){$scope.currentDirectoryContent=[];for(var i=0,length=directories.length;i<length;i++){directories[i]["path"]=$scope.currentPath;directories[i]["fullPath"]=$scope.currentPath+directories[i].name;directories[i]["parsedName"]=directories[i].name.replace(/\s/g," ");$scope.currentDirectoryContent.push(directories[i])}};$scope.restore=function(backup){$scope.selectedFilePath=backup.fullpath;$scope.selectedBackupID=backup.backupID;var $uibModalInstance=$uibModal.open({templateUrl:"restoreModalContent.tmpl",controller:"restoreModalController",resolve:{fileExists:$scope.selectedItemExists}});$uibModalInstance.result.then(function(proceedRestoration){if(proceedRestoration){$scope.dataRestoring=true;backupAPIService.restore($scope.selectedFilePath,$scope.selectedBackupID).then(function(response){if(response.success){$scope.dataRestoring=false;growl.success(LOCALE.maketext("File “[_1]” restored successfully.",_.escape($scope.selectedFilePath)))}},function(error){$scope.dataRestoring=false;growl.error(LOCALE.maketext("Restoration failure for file “[_1]”: “[_2]”.",_.escape($scope.selectedFilePath),error))})}})};$scope.init=function(){$scope.currentPath="/";$scope.initialDataLoaded=false;backupAPIService.listDirectory($scope.currentPath).then(function(directory){$scope.buildBreadcrumb();$scope.addPaths(directory);$scope.initialDataLoaded=true},function(error){growl.error(error);$scope.initialDataLoaded=true})};$scope.init()}]);return controller});